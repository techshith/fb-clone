{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"classes\", \"className\", \"closeAfterTransition\", \"component\", \"components\", \"componentsProps\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../TrapFocus';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\nconst defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  var _props$ariaHidden, _componentsProps$root;\n  const {\n      children,\n      classes: classesProp,\n      className,\n      closeAfterTransition = false,\n      component = 'div',\n      components = {},\n      componentsProps = {},\n      container,\n      disableAutoFocus = false,\n      disableEnforceFocus = false,\n      disableEscapeKeyDown = false,\n      disablePortal = false,\n      disableRestoreFocus = false,\n      disableScrollLock = false,\n      hideBackdrop = false,\n      keepMounted = false,\n      // private\n      // eslint-disable-next-line react/prop-types\n      manager = defaultManager,\n      onBackdropClick,\n      onClose,\n      onKeyDown,\n      open,\n      /* eslint-disable react/prop-types */\n      onTransitionEnter,\n      onTransitionExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [exited, setExited] = React.useState(true);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n  const ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n    if (!node) {\n      return;\n    }\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n  const ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  const handleEnter = () => {\n    setExited(false);\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n  const handleExited = () => {\n    setExited(true);\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n  const childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n  const Root = components.Root || component;\n  const rootProps = appendOwnerState(Root, _extends({\n    role: 'presentation'\n  }, other, componentsProps.root, {\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    className: clsx(classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className, className)\n  }), ownerState);\n  const BackdropComponent = components.Backdrop;\n  const backdropProps = appendOwnerState(BackdropComponent, _extends({\n    'aria-hidden': true,\n    open,\n    onClick: handleBackdropClick\n  }, componentsProps.backdrop), ownerState);\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(TrapFocus, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Backdrop: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    backdrop: PropTypes.object,\n    root: PropTypes.object\n  }),\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default ModalUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","elementAcceptingRef","HTMLElementType","unstable_ownerDocument","ownerDocument","unstable_useForkRef","useForkRef","unstable_createChainedFunction","createChainedFunction","unstable_useEventCallback","useEventCallback","composeClasses","appendOwnerState","Portal","ModalManager","ariaHidden","TrapFocus","getModalUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","classes","slots","root","getContainer","container","getHasTransition","props","children","hasOwnProperty","defaultManager","ModalUnstyled","forwardRef","ref","_props$ariaHidden","_componentsProps$root","classesProp","className","closeAfterTransition","component","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","manager","onBackdropClick","onClose","onKeyDown","onTransitionEnter","onTransitionExited","other","setExited","useState","modal","useRef","mountNodeRef","modalRef","handleRef","hasTransition","ariaHiddenProp","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","childProps","tabIndex","undefined","onEnter","onExited","Root","rootProps","role","BackdropComponent","Backdrop","backdropProps","onClick","backdrop","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","isRequired","object","string","bool","elementType","shape","oneOfType","func"],"sources":["/Users/veekshith/fb-clone/node_modules/@mui/base/ModalUnstyled/ModalUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"classes\", \"className\", \"closeAfterTransition\", \"component\", \"components\", \"componentsProps\", \"container\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onKeyDown\", \"open\", \"onTransitionEnter\", \"onTransitionExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef, HTMLElementType, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_createChainedFunction as createChainedFunction, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport Portal from '../Portal';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from '../TrapFocus';\nimport { getModalUtilityClass } from './modalUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nconst defaultManager = new ModalManager();\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nconst ModalUnstyled = /*#__PURE__*/React.forwardRef(function ModalUnstyled(props, ref) {\n  var _props$ariaHidden, _componentsProps$root;\n\n  const {\n    children,\n    classes: classesProp,\n    className,\n    closeAfterTransition = false,\n    component = 'div',\n    components = {},\n    componentsProps = {},\n    container,\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    // private\n    // eslint-disable-next-line react/prop-types\n    manager = defaultManager,\n    onBackdropClick,\n    onClose,\n    onKeyDown,\n    open,\n\n    /* eslint-disable react/prop-types */\n    onTransitionEnter,\n    onTransitionExited\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [exited, setExited] = React.useState(true);\n  const modal = React.useRef({});\n  const mountNodeRef = React.useRef(null);\n  const modalRef = React.useRef(null);\n  const handleRef = useForkRef(modalRef, ref);\n  const hasTransition = getHasTransition(props);\n  const ariaHiddenProp = (_props$ariaHidden = props['aria-hidden']) != null ? _props$ariaHidden : true;\n\n  const getDoc = () => ownerDocument(mountNodeRef.current);\n\n  const getModal = () => {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  const handleMounted = () => {\n    manager.mount(getModal(), {\n      disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  const handleOpen = useEventCallback(() => {\n    const resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  const isTopModal = React.useCallback(() => manager.isTopModal(getModal()), [manager]);\n  const handlePortalRef = useEventCallback(node => {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, ariaHiddenProp);\n    }\n  });\n  const handleClose = React.useCallback(() => {\n    manager.remove(getModal(), ariaHiddenProp);\n  }, [manager, ariaHiddenProp]);\n  React.useEffect(() => {\n    return () => {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(() => {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  const ownerState = _extends({}, props, {\n    classes: classesProp,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    exited,\n    hideBackdrop,\n    keepMounted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  const handleEnter = () => {\n    setExited(false);\n\n    if (onTransitionEnter) {\n      onTransitionEnter();\n    }\n  };\n\n  const handleExited = () => {\n    setExited(true);\n\n    if (onTransitionExited) {\n      onTransitionExited();\n    }\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    } // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviors like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n\n\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    }\n\n    if (!disableEscapeKeyDown) {\n      // Swallow the event, in case someone is listening for the escape key on the body.\n      event.stopPropagation();\n\n      if (onClose) {\n        onClose(event, 'escapeKeyDown');\n      }\n    }\n  };\n\n  const childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  const Root = components.Root || component;\n  const rootProps = appendOwnerState(Root, _extends({\n    role: 'presentation'\n  }, other, componentsProps.root, {\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    className: clsx(classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className, className)\n  }), ownerState);\n  const BackdropComponent = components.Backdrop;\n  const backdropProps = appendOwnerState(BackdropComponent, _extends({\n    'aria-hidden': true,\n    open,\n    onClick: handleBackdropClick\n  }, componentsProps.backdrop), ownerState);\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropComponent, _extends({}, backdropProps)) : null, /*#__PURE__*/_jsx(TrapFocus, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ModalUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Backdrop: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    backdrop: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default ModalUnstyled;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}